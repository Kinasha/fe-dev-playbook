(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{448:function(s,a,t){"use strict";t.r(a);var e=t(54),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"shell命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell命令"}},[s._v("#")]),s._v(" Shell命令")]),s._v(" "),t("p",[s._v("熟练使用*nix系统的第一步便是熟练它的常用命令，大部分服务器的使用的Linux环境是没有GUI的，我们只能够通过命令来操控系统。对于前端开发来说，我们无需掌握大部分的高难度命令，只需掌握工作开发中常用的命令即可。如果不知道某个命令怎么用，最开始的时候是可以通过网络搜索来解决，稍微熟悉之后，就可以通过"),t("code",[s._v("man xxx")]),s._v("来查阅命令的手册来学习命令的各种参数。")]),s._v(" "),t("h2",{attrs:{id:"文件相关命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件相关命令"}},[s._v("#")]),s._v(" 文件相关命令")]),s._v(" "),t("p",[s._v("熟练使用*nix系统下的复制 移动命令可以帮助我们写一些小的自动化shell脚本。例如在前端构建完毕后，将构建产物移动到指定目录或者重命名")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" ./a.txt "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/b.txt "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将当前目录下的a.txt文件复制到上级目录并更名")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" ./a.txt "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/b.txt "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将当前目录下的a.txt文件移动到上级目录并更名")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" ./a.txt ./b.txt "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重命名当前目录下的a.txt文件")]),s._v("\n")])])]),t("h3",{attrs:{id:"find"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[s._v("#")]),s._v(" find")]),s._v(" "),t("p",[s._v("使用 "),t("code",[s._v("find")]),s._v(" 命令可以帮助我们查找符合要求的文件")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" ./ -iname "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.js"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找当前目录下的所有js文件, 忽略大小写")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" ./ -size +25k  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找当前目录下文件大小大于25kb的文件")]),s._v("\n")])])]),t("h3",{attrs:{id:"ack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ack"}},[s._v("#")]),s._v(" ack")]),s._v(" "),t("p",[s._v("find的功能是比较弱的，对全文检索有心无力，ack是更好的搜索代码神器")]),s._v(" "),t("p",[s._v("安装")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ack \n")])])]),t("p",[s._v("然后，通过ack加关键字搜索即可。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ ack targetCode\n$ ack -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ICE BUILD"')]),s._v(" ./node_modules\n")])])]),t("h3",{attrs:{id:"grep"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" grep")]),s._v(" "),t("p",[s._v("使用 "),t("code",[s._v("grep")]),s._v(" 命令可以帮助我们筛选符合要求的内容")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"browserRouter"')]),s._v(" -i ./src/entry.tsx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在当前src目录下的entry.tsx文件中查找browserRouter关键字忽略大小写")]),s._v("\n")])])]),t("h3",{attrs:{id:"awk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[s._v("#")]),s._v(" awk")]),s._v(" "),t("p",[s._v("通过awk命令我们可以筛选出符合要求的行或者列数据")]),s._v(" "),t("p",[s._v("以:为分隔符，将password分为多列，并且提取出第一列的内容")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("}'")]),s._v("\n")])])]),t("h3",{attrs:{id:"tar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar"}},[s._v("#")]),s._v(" tar")]),s._v(" "),t("p",[s._v("通过tar命令可以将文件打包并压缩，也可以解包和解压缩，配合别的命令可以写成简单的发布脚本。比如下面的命令就是一个打包压缩和解压缩的例子，将当前文件夹下的所有文件打包并gzip压缩，然后再来一遍解压缩")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zcvf build.zip ./*\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf build.zip -C ./test\n")])])]),t("h3",{attrs:{id:"scp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scp"}},[s._v("#")]),s._v(" scp")]),s._v(" "),t("p",[s._v("打包好的文件可以通过scp来跨机器拷贝到集成调试服务器上面，比如我们本地打包好的文件是build.zip，需要拷贝到服务器上面/usr/share/nginx/html/，服务器ip是10.20.30.40，用户名是fe-deploy，就可以通过如下命令完成：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" ./build.zip fe-deploy@10.20.30.40:/usr/share/nginx/html/build.zip\n")])])]),t("h3",{attrs:{id:"rsync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rsync"}},[s._v("#")]),s._v(" rsync")]),s._v(" "),t("p",[s._v("如果只是把打包好的文件推送到服务器上面，rsync会比上面先压缩再scp，再解压要简单很多。rsync就是用来同步两个目录，可以跨越网络。比如还是上面发布的例子，我们可以直接用下面的命令。"),t("code",[s._v("-r")]),s._v("是递归。"),t("code",[s._v("-v")]),s._v("是回显，都同步了哪些文件。"),t("code",[s._v("-z")]),s._v("是压缩。"),t("code",[s._v("--delete")]),s._v("是在目的目录删掉我们原目录不存在的文件。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rsync")]),s._v(" -rvz ./ fe-deploy@10.20.30.40:/usr/share/nginx/html --delete\n")])])]),t("h2",{attrs:{id:"进程相关命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程相关命令"}},[s._v("#")]),s._v(" 进程相关命令")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" -i:8000 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看端口占用情况")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前正在运行的进程，ps命令选项众多这里不一一介绍")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -9 pid "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据进程pid来将进程强制退出")]),s._v("\n")])])]),t("h2",{attrs:{id:"管道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#管道"}},[s._v("#")]),s._v(" 管道")]),s._v(" "),t("p",[s._v("管道可以将上一个命令的stdout输出，作为下一个命令的stdin输入。通过管道符我们可以实现一些稍微复杂的自动化的脚本功能")]),s._v(" "),t("p",[s._v("比如，查找当前正在运行的Node进程并提取出pid传给kill命令来退出进程。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -9 \n")])])]),t("h2",{attrs:{id:"tree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tree"}},[s._v("#")]),s._v(" tree")]),s._v(" "),t("p",[s._v("大部分框架的文档都是使用tree命令来列出目录结构示例,更多功能查看"),t("a",{attrs:{href:"https://wangchujiang.com/linux-command/c/tree.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ tree -L "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" -I "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'node_modules'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 目录结构层级为2，忽略node_modules")]),s._v("\n├── app.js\n├── dist\n├── f.yml\n├── package.json\n└── src\n    ├── detail\n    ├── index\n    └── layout\n    \n")])])]),t("h2",{attrs:{id:"time"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#time"}},[s._v("#")]),s._v(" time")]),s._v(" "),t("p",[s._v("time命令用于统计给定命令所花费的总时间。更多信息查看"),t("a",{attrs:{href:"https://man.linuxde.net/time",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n")])])]),t("h2",{attrs:{id:"ssh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh"}},[s._v("#")]),s._v(" ssh")]),s._v(" "),t("p",[s._v("有时候我们也需要登录到服务器上面，就可以通过"),t("code",[s._v("ssh")]),s._v("来登录。也可以通过配置把本地的公钥加到服务器上面，来省略输入密码的过程，详细的步骤可以搜索下，这里就不详细说了。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" fe-deploy@10.20.30.40\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);